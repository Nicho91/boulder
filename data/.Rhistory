axis.title = element_text(size = 9),
strip.text.x = element_text(size = 8),
legend.position = c(0.7,0.8),
legend.background = element_blank(),
legend.key = element_blank())
alum_op_melt <- melt(alum_data[,c(1,3:4)], id = "date")
p2 <- alum_op_melt %>% ggplot() +
geom_point(aes(date, value, col = variable)) +
labs(title = "Alum OP Concentration at Dosing",
x = "Date",
y = "Hourly OP (mg/L)") +
scale_color_brewer(palette = "Dark2", name = "Location", labels = c("Dosing Station", "Effluent")) +
theme(legend.title = element_text(size = 8),
legend.text = element_text(size = 7),
plot.title = element_text(face="bold", size = 9, hjust = 0.5),
axis.text = element_text(size = 6),
axis.title = element_text(size = 9),
strip.text.x = element_text(size = 8),
legend.position = c(0.67,0.75),
legend.background = element_blank(),
legend.key = element_blank())
grid.arrange(p1, p2, ncol = 2)
ferr_op_melt <- melt(ferr_data[,c(1,3:4)], id = "date")
p1 <- ferr_op_melt %>% ggplot() +
geom_point(aes(date, value, col = variable)) +
labs(title = "Ferric OP Concentration at Dosing",
x = "Date",
y = "Hourly OP (mg/L)") +
scale_color_brewer(palette = "Dark2", name = "Location", labels = c("Dosing Station", "Effluent")) +
theme(legend.title = element_text(size = 8),
legend.text = element_text(size = 7),
plot.title = element_text(face="bold", size = 9, hjust = 0.5),
axis.text = element_text(size = 6),
axis.title = element_text(size = 9),
strip.text.x = element_text(size = 8),
legend.position = c(0.7,0.85),
legend.background = element_blank(),
legend.key = element_blank())
alum_op_melt <- melt(alum_data[,c(1,3:4)], id = "date")
p2 <- alum_op_melt %>% ggplot() +
geom_point(aes(date, value, col = variable)) +
labs(title = "Alum OP Concentration at Dosing",
x = "Date",
y = "Hourly OP (mg/L)") +
scale_color_brewer(palette = "Dark2", name = "Location", labels = c("Dosing Station", "Effluent")) +
theme(legend.title = element_text(size = 8),
legend.text = element_text(size = 7),
plot.title = element_text(face="bold", size = 9, hjust = 0.5),
axis.text = element_text(size = 6),
axis.title = element_text(size = 9),
strip.text.x = element_text(size = 8),
legend.position = c(0.67,0.75),
legend.background = element_blank(),
legend.key = element_blank())
grid.arrange(p1, p2, ncol = 2)
ferr_op_melt <- melt(ferr_data[,c(1,3:4)], id = "date")
p1 <- ferr_op_melt %>% ggplot() +
geom_point(aes(date, value, col = variable)) +
labs(title = "Ferric OP Concentration at Dosing",
x = "Date",
y = "Hourly OP (mg/L)") +
scale_color_brewer(palette = "Dark2", name = "Location", labels = c("Dosing Station", "Effluent")) +
theme(legend.title = element_text(size = 8),
legend.text = element_text(size = 7),
plot.title = element_text(face="bold", size = 9, hjust = 0.5),
axis.text = element_text(size = 6),
axis.title = element_text(size = 9),
strip.text.x = element_text(size = 8),
legend.position = c(0.7,0.88),
legend.background = element_blank(),
legend.key = element_blank())
alum_op_melt <- melt(alum_data[,c(1,3:4)], id = "date")
p2 <- alum_op_melt %>% ggplot() +
geom_point(aes(date, value, col = variable)) +
labs(title = "Alum OP Concentration at Dosing",
x = "Date",
y = "Hourly OP (mg/L)") +
scale_color_brewer(palette = "Dark2", name = "Location", labels = c("Dosing Station", "Effluent")) +
theme(legend.title = element_text(size = 8),
legend.text = element_text(size = 7),
plot.title = element_text(face="bold", size = 9, hjust = 0.5),
axis.text = element_text(size = 6),
axis.title = element_text(size = 9),
strip.text.x = element_text(size = 8),
legend.position = c(0.67,0.75),
legend.background = element_blank(),
legend.key = element_blank())
grid.arrange(p1, p2, ncol = 2)
ferr_op_melt <- melt(ferr_data[,c(1,3:4)], id = "date")
p1 <- ferr_op_melt %>% ggplot() +
geom_point(aes(date, value, col = variable)) +
labs(title = "Ferric OP Concentration at Dosing",
x = "Date",
y = "Hourly OP (mg/L)") +
scale_color_brewer(palette = "Dark2", name = "Location", labels = c("Dosing Station", "Effluent")) +
theme(legend.title = element_text(size = 8),
legend.text = element_text(size = 7),
plot.title = element_text(face="bold", size = 9, hjust = 0.5),
axis.text = element_text(size = 6),
axis.title = element_text(size = 9),
strip.text.x = element_text(size = 8),
legend.position = c(0.7,0.89),
legend.background = element_blank(),
legend.key = element_blank())
alum_op_melt <- melt(alum_data[,c(1,3:4)], id = "date")
p2 <- alum_op_melt %>% ggplot() +
geom_point(aes(date, value, col = variable)) +
labs(title = "Alum OP Concentration at Dosing",
x = "Date",
y = "Hourly OP (mg/L)") +
scale_color_brewer(palette = "Dark2", name = "Location", labels = c("Dosing Station", "Effluent")) +
theme(legend.title = element_text(size = 8),
legend.text = element_text(size = 7),
plot.title = element_text(face="bold", size = 9, hjust = 0.5),
axis.text = element_text(size = 6),
axis.title = element_text(size = 9),
strip.text.x = element_text(size = 8),
legend.position = c(0.67,0.75),
legend.background = element_blank(),
legend.key = element_blank())
grid.arrange(p1, p2, ncol = 2)
ferr_op_melt <- melt(ferr_data[,c(1,3:4)], id = "date")
p1 <- ferr_op_melt %>% ggplot() +
geom_point(aes(date, value, col = variable)) +
labs(title = "Ferric OP Concentration at Dosing",
x = "Date",
y = "Hourly OP (mg/L)") +
scale_color_brewer(palette = "Dark2", name = "Location", labels = c("Dosing Station", "Effluent")) +
theme(legend.title = element_text(size = 8),
legend.text = element_text(size = 7),
plot.title = element_text(face="bold", size = 9, hjust = 0.5),
axis.text = element_text(size = 6),
axis.title = element_text(size = 9),
strip.text.x = element_text(size = 8),
legend.position = c(0.7,0.89),
legend.background = element_blank(),
legend.key = element_blank())
alum_op_melt <- melt(alum_data[,c(1,3:4)], id = "date")
p2 <- alum_op_melt %>% ggplot() +
geom_point(aes(date, value, col = variable)) +
labs(title = "Alum OP Concentration at Dosing",
x = "Date",
y = "Hourly OP (mg/L)") +
scale_color_brewer(palette = "Dark2", name = "Location", labels = c("Dosing Station", "Effluent")) +
theme(legend.title = element_text(size = 8),
legend.text = element_text(size = 7),
plot.title = element_text(face="bold", size = 9, hjust = 0.5),
axis.text = element_text(size = 6),
axis.title = element_text(size = 9),
strip.text.x = element_text(size = 8),
legend.position = c(0.7,0.89),
legend.background = element_blank(),
legend.key = element_blank())
grid.arrange(p1, p2, ncol = 2)
ferr_op_melt <- melt(ferr_data[,c(1,3:4)], id = "date")
p1 <- ferr_op_melt %>% ggplot() +
geom_point(aes(date, value, col = variable)) +
labs(title = "Ferric OP Concentration at Dosing",
x = "Date",
y = "Hourly OP (mg/L)") +
scale_color_brewer(palette = "Dark2", name = "Location", labels = c("Dosing Station", "Effluent")) +
theme(legend.title = element_text(size = 8),
legend.text = element_text(size = 7),
plot.title = element_text(face="bold", size = 9, hjust = 0.5),
axis.text = element_text(size = 6),
axis.title = element_text(size = 9),
strip.text.x = element_text(size = 8),
legend.position = c(0.7,0.89),
legend.background = element_blank(),
legend.key = element_blank())
alum_op_melt <- melt(alum_data[,c(1,3:4)], id = "date")
p2 <- alum_op_melt %>% ggplot() +
geom_point(aes(date, value, col = variable)) +
labs(title = "Alum OP Concentration at Dosing",
x = "Date",
y = "Hourly OP (mg/L)") +
scale_color_brewer(palette = "Dark2", name = "Location", labels = c("Dosing Station", "Effluent")) +
theme(legend.title = element_text(size = 8),
legend.text = element_text(size = 7),
plot.title = element_text(face="bold", size = 9, hjust = 0.5),
axis.text = element_text(size = 6),
axis.title = element_text(size = 9),
strip.text.x = element_text(size = 8),
legend.position = c(0.7,0.89),
legend.background = element_blank(),
legend.key = element_blank())
grid.arrange(p1, p2, ncol = 2)
ggplot(ferr_melt3) +
geom_boxplot(aes(y=value, fill=variable), outlier.size = 0.5, outlier.color = "red") +
facet_wrap(vars(hour), labeller = labeller(hour = hours)) +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.title = element_text(size = 9),
legend.text = element_text(size = 9),
plot.title = element_text(face="bold", size = 9, hjust = 0.5),
axis.text = element_text(size = 6),
axis.title = element_text(size = 9),
strip.text.x = element_text(size = 8),
legend.position = "bottom")
load("/Users/haosheng/Desktop/boulder/data/final-data.rda")
load("/Users/haosheng/Desktop/boulder/data/boulderMoWater.rda")
ggplot(ferr_melt6) +
geom_boxplot(aes(y=value, fill=variable), outlier.size = 0.5, outlier.color = "red") +
facet_wrap(vars(hour), labeller = labeller(hour = hours)) +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.title = element_text(size = 9),
legend.text = element_text(size = 9),
plot.title = element_text(face="bold", size = 9, hjust = 0.5),
axis.text = element_text(size = 6),
axis.title = element_text(size = 9),
strip.text.x = element_text(size = 8),
legend.position = "bottom")
p1 <- ferr_data %>% ggplot(aes(op_mg_p_l, op_conc_mg_p_l_hourly)) +
geom_point(size = 4) +
stat_smooth(method="lm", se= TRUE) +
labs(title = "Ferric Effluent vs. Dosing OP Concentrations",
x = "Dosing OP (mg/L)",
y = "Effluent OP (mg/L)") +
theme(plot.title = element_text(face="bold", size = 16, hjust = 0.5),
axis.text = element_text(size = 16),
axis.title = element_text(size = 16))
p2 <- alum_data %>% ggplot(aes(op_mg_p_l, op_conc_mg_p_l_hourly)) +
geom_point(size = 4) +
stat_smooth(method="lm", se= TRUE) +
labs(title = "Alum Effluent vs. Dosing OP Concentrations",
x = "Dosing OP (mg/L)",
y = "Effluent OP (mg/L)") +
theme(plot.title = element_text(face="bold", size = 16, hjust = 0.5),
axis.text = element_text(size = 16),
axis.title = element_text(size = 16))
grid.arrange(p1, p2, ncol = 2)
rm( list = ls())
library(tidyverse)
library(ggplot2)
load("../data/final-data.rda")
setwd("~/Desktop/boulder/data")
load("../data/final-data.rda")
load("../data/boulderMoWater.rda")
x1 <- c(rep(1,72))
x1[1:32] <-0
# mols of metal as covariate
x2 <- full_ancova %>% select(mols_of_metal_kmol_day,
influent_mgd_hourly_avg,
effluent_mgd,
primary_sludge_gmp_hourly_avg)
#adding noises
y<-  5  - x1 + x2*.1 + .2* rnorm(72)
df <- data.frame( Noise = y, x2, treatment=as.factor( x1))
##mols of metal vs noise added mols of metal
df %>%
ggplot(aes(mols_of_metal_kmol_day,Noise.mols_of_metal_kmol_day, col = treatment)) +
geom_point()
x1[coagulant == "ferric"] <-0
x2
x1
x1 <- c(rep(1,72))
x1
x1[full_ancova$coagulant == "ferric"] <-0
x1
x1 <- c(rep(1,72))
x1[full_ancova$coagulant == "ferric"] <-0
x1
x1[full_ancova$coagulant]
x1[full_ancova$coagulant == "ferric"]
full_ancova$coagulant[x1]
full_ancova$coagulant
x1 <- full_ancova$coagulant == "Ferric"
x1
x1 <- c(rep(1,72))
x1[full_ancova$coagulant == "Ferric"] <- 0
x1
x1 <- c(rep(1,72))
x1[full_ancova$coagulant == "Ferric"] <- 0
x1
# mols of metal as covariate
x2 <- full_ancova %>% select(mols_of_metal_kmol_day,
influent_mgd_hourly_avg,
effluent_mgd,
primary_sludge_gmp_hourly_avg)
rm( list = ls())
library(tidyverse)
library(ggplot2)
load("../data/final-data.rda")
load("../data/boulderMoWater.rda")
x1 <- c(rep(1,72))
x1[full_ancova$coagulant == "Ferric"] <- 0
# mols of metal as covariate
x2 <- full_ancova %>% select(mols_of_metal_kmol_day,
influent_mgd_hourly_avg,
effluent_mgd,
primary_sludge_gmp_hourly_avg)
#adding noises
y<-  5  - x1 + x2*.1 + .2* rnorm(72)
df <- data.frame( Noise = y, x2, treatment=as.factor( x1))
##mols of metal vs noise added mols of metal
df %>%
ggplot(aes(mols_of_metal_kmol_day,Noise.mols_of_metal_kmol_day, col = treatment)) +
geom_point()
##influent_mgd_hourly_avgl vs noise added influent_mgd_hourly_avg
df %>%
ggplot(aes(influent_mgd_hourly_avg,Noise.influent_mgd_hourly_avg, col = treatment)) +
geom_point()
## effluent_mgd vs noise added effluent_mgd
df %>%
ggplot(aes(effluent_mgd,Noise.effluent_mgd, col = treatment)) +
geom_point()
## primary_sludge_gmp_hourly_avg vs noise added primary_sludge_gmp_hourly_avg
df %>%
ggplot(aes(primary_sludge_gmp_hourly_avg,Noise.primary_sludge_gmp_hourly_avg, col = treatment)) +
geom_point()
######### linear regression test of each synthetic data
# without covariate mols of metal
obj0<- lm(Noise.mols_of_metal_kmol_day ~ treatment, data = df)
summary( obj0)
# with covariate mols of metal
obj1<- lm( Noise.mols_of_metal_kmol_day ~ treatment + mols_of_metal_kmol_day , data = df)
summary( obj1)
###########
# without covariate influent_mgd_hourly_avg
obj0<- lm(Noise.influent_mgd_hourly_avg ~ treatment, data = df)
summary( obj0)
# with covariate influent_mgd_hourly_avg
obj1<- lm( Noise.influent_mgd_hourly_avg ~ treatment + influent_mgd_hourly_avg , data = df)
summary( obj1)
############
# without covariate effluent_mgd
obj0<- lm(Noise.effluent_mgd ~ treatment, data = df)
summary( obj0)
# with covariate effluent_mgd
obj1<- lm( Noise.effluent_mgd ~ treatment + effluent_mgd , data = df)
summary( obj1)
###########
# without covariate primary_sludge_gmp_hourly_avg
obj0<- lm(Noise.primary_sludge_gmp_hourly_avg ~ treatment, data = df)
summary( obj0)
# with covariate primary_sludge_gmp_hourly_avg
obj1<- lm( Noise.primary_sludge_gmp_hourly_avg ~ treatment + primary_sludge_gmp_hourly_avg , data = df)
summary( obj1)
x1 <- c(rep(1,72))
x1[full_ancova$coagulant == "Alum"] <- 0
x1
x1[full_ancova$coagulant == "Ferric"] <- 0
x1# mols of metal as covariate
x1 <- c(rep(1,72))
x1[full_ancova$coagulant == "Ferric"] <- 0
###########
# without covariate primary_sludge_gmp_hourly_avg
obj0<- lm(Noise.primary_sludge_gmp_hourly_avg ~ treatment, data = df)
# with covariate primary_sludge_gmp_hourly_avg
obj1<- lm( Noise.primary_sludge_gmp_hourly_avg ~ treatment + primary_sludge_gmp_hourly_avg , data = df)
summary( obj0)
summary( obj1)
View(obj0)
library(tidyverse)
library(lubridate)
library(rstatix)
library(emmeans)
library(ggpubr)
theme_update(panel.background = element_blank(), axis.line = element_line(colour = "black"))
#### Identify linear relationships for possible covariates. See row/column 5 ####
pairs(partial_ancova)
#### Influent Covariate ANCOVA Analysis ####
partial_ancova1 <- partial_ancova %>% select(coagulant, phos_change, influent_mgd_hourly_avg)
# shows the 'linear' relationship between the outcome variable and covarient
plot(partial_ancova1$influent_mgd_hourly_avg, partial_ancova1$phos_change)
# plot the points and linear fit by coagulant; test for linearity with covariate
ggplot( partial_ancova1, aes(influent_mgd_hourly_avg, phos_change, color = coagulant) ) +
geom_point( aes(shape = coagulant), size = 2, alpha = .75 ) +
geom_smooth( method='lm', se = TRUE ) +
stat_regline_equation( aes( label = paste(..eq.label.., ..rr.label.., sep = '~~~') ) , size = 3 ) +
scale_color_brewer(palette = "Dark2") +
theme( legend.position = "right",
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14),
plot.title = element_text( face="bold", size = 16, hjust = 0.5 ) ) +
labs(x = "Influent Hourly Average (mgd)",
y = "Change in Phosphorus (mg/L)",
title = "Influent Vs Change in Phosphorus",
color = "Coagulant")  +
guides(shape = FALSE)
# with covariate effluent_mgd
obj1<- lm( Noise.effluent_mgd ~ treatment + effluent_mgd , data = df)
summary( obj1)
df
view(df)
install.packages("rcartocolor")
obj0<- lm(Noise.effluent_mgd ~ treatment, data = df)
summary( obj0)
# with covariate effluent_mgd
obj1<- lm( Noise.effluent_mgd ~ treatment + effluent_mgd , data = df)
summary( obj1)
rm( list = ls())
#Change folder if needed.
setwd("Baylor/MoWater/proj6/MoWater-Goodyear")
load("clean/goodyearMoWater0.rda" )
load("clean/cleanedObjects.rda" )
## primary_sludge_gmp_hourly_avg vs noise added primary_sludge_gmp_hourly_avg
df %>%
ggplot(aes(primary_sludge_gmp_hourly_avg,Noise.primary_sludge_gmp_hourly_avg, col = treatment)) +
geom_point()
library(tidyverse)
library(ggplot2)
load("../data/final-data.rda")
setwd("~/Desktop/boulder/data")
library(tidyverse)
library(ggplot2)
load("../data/final-data.rda")
load("../data/boulderMoWater.rda")
#### this set the treatment between Ferric and Alum which Ferric replace with 0 and Alum with 1
x1 <- c(rep(1,72))
x1[full_ancova$coagulant == "Ferric"] <- 0
# mols of metal as covariate
x2 <- full_ancova %>% select(mols_of_metal_kmol_day,
influent_mgd_hourly_avg,
effluent_mgd,
primary_sludge_gmp_hourly_avg)
#adding noises
y<-  5  - x1 + x2*.1 + .2* rnorm(72)
## data frame
df <- data.frame( Noise = y, x2, treatment=as.factor( x1))
view(df)
##mols of metal vs noise added mols of metal
df %>%
ggplot(aes(mols_of_metal_kmol_day,Noise.mols_of_metal_kmol_day, col = treatment)) +
geom_point()
##influent_mgd_hourly_avgl vs noise added influent_mgd_hourly_avg
df %>%
ggplot(aes(influent_mgd_hourly_avg,Noise.influent_mgd_hourly_avg, col = treatment)) +
geom_point()
## effluent_mgd vs noise added effluent_mgd
df %>%
ggplot(aes(effluent_mgd,Noise.effluent_mgd, col = treatment)) +
geom_point()
## primary_sludge_gmp_hourly_avg vs noise added primary_sludge_gmp_hourly_avg
df %>%
ggplot(aes(primary_sludge_gmp_hourly_avg,Noise.primary_sludge_gmp_hourly_avg, col = treatment)) +
geom_point()
######### linear regression test of each synthetic data variables
# without covariate mols of metal
obj0<- lm(Noise.mols_of_metal_kmol_day ~ treatment, data = df)
summary( obj0)
# with covariate mols of metal
obj1<- lm( Noise.mols_of_metal_kmol_day ~ treatment + mols_of_metal_kmol_day , data = df)
summary( obj1)
###########
# without covariate influent_mgd_hourly_avg
obj0<- lm(Noise.influent_mgd_hourly_avg ~ treatment, data = df)
summary( obj0)
##mols of metal vs noise added mols of metal
df %>%
ggplot(aes(mols_of_metal_kmol_day,Noise.mols_of_metal_kmol_day, col = treatment)) +
geom_point() +
labs(title = "Noise added Primary sludge gmp hourly avg vs Primary sludge gmp hourly avg ")
##mols of metal vs noise added mols of metal
df %>%
ggplot(aes(mols_of_metal_kmol_day,Noise.mols_of_metal_kmol_day, col = treatment)) +
geom_point() +
labs(title = "Noise added Primary sludge gmp vs Primary sludge  ",
)
##mols of metal vs noise added mols of metal
df %>%
ggplot(aes(mols_of_metal_kmol_day,Noise.mols_of_metal_kmol_day, col = treatment)) +
geom_point() +
labs(title = "Noise added Primary sludge gmp vs Primary sludge  "
)
##mols of metal vs noise added mols of metal
df %>%
ggplot(aes(mols_of_metal_kmol_day,Noise.mols_of_metal_kmol_day, col = treatment)) +
geom_point() +
labs(title = "Noise added mols_of_metal_kmol_day vs mols_of_metal_kmol_day  "
x = "mols_of_metal_kmol_day")
##mols of metal vs noise added mols of metal
df %>%
ggplot(aes(mols_of_metal_kmol_day,Noise.mols_of_metal_kmol_day, col = treatment)) +
geom_point() +
labs(title = "Noise added mols_of_metal_kmol_day vs mols_of_metal_kmol_day",
x = "mols_of_metal_kmol_day")
##mols of metal vs noise added mols of metal
df %>%
ggplot(aes(mols_of_metal_kmol_day,Noise.mols_of_metal_kmol_day, col = treatment)) +
geom_point() +
labs(title = "Noise added mols_of_metal_kmol_day vs mols_of_metal_kmol_day",
x = "Mols of metal",
y = "Mols of metal with noise")
(df)
view(df)
##influent_mgd_hourly_avgl vs noise added influent_mgd_hourly_avg
df %>%
ggplot(aes(influent_mgd_hourly_avg,Noise.influent_mgd_hourly_avg, col = treatment)) +
geom_point() +
labs(title = "Noise added Influent mgd vs Influent mgd",
x = "Influent mgd",
y = "Noise added Influent mgd ")
## effluent_mgd vs noise added effluent_mgd
df %>%
ggplot(aes(effluent_mgd,Noise.effluent_mgd, col = treatment)) +
geom_point() +
labs(title = "Noise added Effluent mgd vs Effluent mgd ",
x = "effluent mgd",
y = "Noise added Effluent mgd ")
## primary_sludge_gmp_hourly_avg vs noise added primary_sludge_gmp_hourly_avg
df %>%
ggplot(aes(primary_sludge_gmp_hourly_avg,Noise.primary_sludge_gmp_hourly_avg, col = treatment)) +
geom_point() +
labs(title = "Noise added Primary Sludge vs Primary Sludge ",
x = "Primary Sludge",
y = "Noise added Primary Sludge")
