View(mines.data)
tds.data <- read.csv("p4/colorado_tds.csv")
View(tds.data)
tds.data <- read.csv("p4/colorado_tds.csv")
tds.data
tds.data <- read_csv("p4/colorado_tds.csv")
library(tidyverse)
tds.data <- read_csv("p4/colorado_tds.csv")
tds.data
ttest <- ds.data %>% filter(lees < 1000 & lees > 700)
test <- tds.data %>% filter(lees < 1000 & lees > 700)
test
tds.data %>% group_by(year)
length(unique(tds.data$year))
test <-tds.data %>% group_by(year) %>% mutate(avg_lee = mean(lees)) %>% ungroup()
test
View(test)
load("p1/predictors.Rdata")
load("p1/predictors.Rdata")
load("p2/DOC_baseFlow_weightedAvg_and_predictors.RData")
View(DOC_baseFlow_weightedAvg_and_predictors)
library(fields)
doc <- DOC_baseFlow_weightedAvg_and_predictors
quilt.plot(doc$Longitude,doc$Latitude, doc$precip_yearAvg)
library(maps)
map('use', add=T)
map('usa', add=T)
map('county', add=T)
map('state', add=T)
quartz()
View(doc)
View(doc)
quilt.plot(doc$Longitude,doc$Latitude, doc$precip_yearAvg)
map('county', add=T)
dev.off()
quartz()
plot(doc$Longitude, doc$Latitude, fill = doc$precip_yearAvg)
plot(doc$Longitude, doc$Latitude)
map('county', add=T)
plot(doc$Longitude, doc$Latitude,cex=20)
plot(doc$Longitude, doc$Latitude,cex=19)
dev.off()
quartz()
plot(doc$Longitude, doc$Latitude,cex=19)
plot(doc$Longitude, doc$Latitude,pch=19)
plot(doc$Longitude, doc$Latitude,pch=20)
map('county', add=T)
?plot
plot(doc$Longitude, doc$Latitude,pch=20,col=doc$maxTemp_yearAvg)
plot(doc$Longitude, doc$Latitude,pch=20,col="Dark Red")
plot(doc$Longitude, doc$Latitude,pch=20,col="lawngreen")
fields.color.picker()
0.695*256
0.695*255
setwd("~/Desktop/MoWater/boulder/src")
load("../data/final-data.rda")
View(ferr_data)
fit <- lm(op_mg_p_l ~ ., data = ferr_data)
fit <- lm(op_mg_p_l ~ ., data = ferr_data[,-1:2])
fit <- lm(op_mg_p_l ~ ., data = ferr_data[,3:14])
summary(fit)
rm( list = ls() )
library(tidyverse)
library(fields)
library(lubridate)
library(latex2exp)
# make sure src is the current working directory
load("../data/boulderMoWater.rda")
# add the hour for grouping and averaging hourly
phosfax_hourly <- phosfax_10m %>%
mutate(hour = hour(date)) %>%
group_by(date = date(date), hour) %>%
summarise(op_conc_mg_p_l_hourly = mean(op_conc_mg_p_l, na.rm = TRUE)) %>%
ungroup()
# turn the date back into one posixct object and eliminate the hour column
phosfax_hourly$date <- with(phosfax_hourly, ymd_h(paste(date, hour, sep= ' ')))
phosfax_hourly <- phosfax_hourly %>% select(date, op_conc_mg_p_l_hourly)
# similar as above get into the same format. just include the hour of the day
mixed_liqour_hourly <- mixed_liqour_hourly %>%
mutate(hour = hour(date)) %>%
mutate(date = date(date))
mixed_liqour_hourly$date <- with(mixed_liqour_hourly, ymd_h(paste(date, hour, sep= ' ')))
mixed_liqour_hourly <- mixed_liqour_hourly %>% select(1:2)
# only grab the day and coagulant to be merged later
dosing_daily_coag <- dosing_daily[,1:2]
dosing_daily_coag$coagulant <- as.factor(dosing_daily_coag$coagulant)
# flow_hourly already in correct format---start joining data-sets
temp <- inner_join(mixed_liqour_hourly, phosfax_hourly, by = "date")
temp2 <- inner_join(temp, flow_hourly, by = "date")
# add the coagulant so reseparate the hour and date since dosing is only daily and not hourly... will restructure after
temp2 <- temp2 %>%
mutate(hour = hour(date), date = date(date))
final_data <- inner_join(temp2, dosing_daily_coag, by = "date")
# now restructure
final_data$date <- with(final_data, ymd_h(paste(date, hour, sep= ' ')))
# bring the coagulant to the second column
final_data <- final_data %>% select(date, coagulant, everything()) %>% select(-hour)
final_data$centrate_gal[100:101] <- 0
# morning talk thursday
final_data <- final_data %>%
filter(date(date) != ymd("2019-08-30") & date(date) != ymd("2019-09-02"))
final_data <- final_data %>%
filter(date(date) < ymd("2019-11-13") | date(date) > ymd("2019-12-01"))
# variables Kate recommended we can remove
del_vars <- c("influent_mgd_daily_avg", "primary_sludge_gmp_daily_avg", "primary_sludge_gal", "thickened_sludge_gal",
"gvt_o_f_gpm", "daft_sub_gpm", "daft_sub_gal", "twas_flow_gpm_daily_avg")
final_data <- final_data %>%
select(-all_of(del_vars))
# look at NA's
for (i in 8:12) {
temp <- final_data %>% filter(hour(date) == i & is.na(influent_mgd_hourly_avg))
value <- final_data %>%
filter(hour(date) == i) %>%
select(influent_mgd_hourly_avg) %>%
summarise(mean(influent_mgd_hourly_avg, na.rm = TRUE))
final_data$influent_mgd_hourly_avg[final_data$date == temp$date] <- as.numeric(value)
temp <- final_data %>% filter(hour(date) == i & is.na(mlws_flow_gpm))
value <- final_data %>%
filter(hour(date) == i) %>%
select(mlws_flow_gpm) %>%
summarise(mean(mlws_flow_gpm, na.rm = TRUE))
final_data$mlws_flow_gpm[final_data$date == temp$date] <- as.numeric(value)
}
for (i in 7:13) {
temp <- final_data %>% filter(hour(date) == i & is.na(abi_mgd))
value <- final_data %>%
filter(hour(date) == i) %>%
select(abi_mgd) %>%
summarise(mean(abi_mgd, na.rm = TRUE))
final_data$abi_mgd[final_data$date == temp$date] <- as.numeric(value)
temp <- final_data %>% filter(hour(date) == i & is.na(ras_gpm))
value <- final_data %>%
filter(hour(date) == i) %>%
select(ras_gpm) %>%
summarise(mean(ras_gpm, na.rm = TRUE))
final_data$ras_gpm[final_data$date == temp$date] <- as.numeric(value)
}
final_data <- final_data %>%
filter(mlws_flow_gpm > 100) # SCADA system down %>%
select(-twas_flow_gal)
ferr_data <- final_data %>% filter(coagulant == "Ferric")
alum_data <- final_data %>% filter(coagulant == "Alum")
rm( list = ls() )
library(tidyverse)
library(fields)
library(lubridate)
library(latex2exp)
load("../data/boulderMoWater.rda")
setwd("~/Desktop/MoWater/boulder/src")
load("../data/boulderMoWater.rda")
# add the hour for grouping and averaging hourly
phosfax_hourly <- phosfax_10m %>%
mutate(hour = hour(date)) %>%
group_by(date = date(date), hour) %>%
summarise(op_conc_mg_p_l_hourly = mean(op_conc_mg_p_l, na.rm = TRUE)) %>%
ungroup()
# turn the date back into one posixct object and eliminate the hour column
phosfax_hourly$date <- with(phosfax_hourly, ymd_h(paste(date, hour, sep= ' ')))
phosfax_hourly <- phosfax_hourly %>% select(date, op_conc_mg_p_l_hourly)
# similar as above get into the same format. just include the hour of the day
mixed_liqour_hourly <- mixed_liqour_hourly %>%
mutate(hour = hour(date)) %>%
mutate(date = date(date))
mixed_liqour_hourly$date <- with(mixed_liqour_hourly, ymd_h(paste(date, hour, sep= ' ')))
mixed_liqour_hourly <- mixed_liqour_hourly %>% select(1:2)
# only grab the day and coagulant to be merged later
dosing_daily_coag <- dosing_daily[,1:2]
dosing_daily_coag$coagulant <- as.factor(dosing_daily_coag$coagulant)
temp <- inner_join(mixed_liqour_hourly, phosfax_hourly, by = "date")
temp2 <- inner_join(temp, flow_hourly, by = "date")
# add the coagulant so reseparate the hour and date since dosing is only daily and not hourly... will restructure after
temp2 <- temp2 %>%
mutate(hour = hour(date), date = date(date))
final_data <- inner_join(temp2, dosing_daily_coag, by = "date")
# now restructure
final_data$date <- with(final_data, ymd_h(paste(date, hour, sep= ' ')))
# bring the coagulant to the second column
final_data <- final_data %>% select(date, coagulant, everything()) %>% select(-hour)
final_data$centrate_gal[100:101] <- 0
final_data <- final_data %>%
filter(date(date) != ymd("2019-08-30") & date(date) != ymd("2019-09-02"))
final_data <- final_data %>%
filter(date(date) < ymd("2019-11-13") | date(date) > ymd("2019-12-01"))
# variables Kate recommended we can remove
del_vars <- c("influent_mgd_daily_avg", "primary_sludge_gmp_daily_avg", "primary_sludge_gal", "thickened_sludge_gal",
"gvt_o_f_gpm", "daft_sub_gpm", "daft_sub_gal", "twas_flow_gpm_daily_avg")
final_data <- final_data %>%
select(-all_of(del_vars))
for (i in 8:12) {
temp <- final_data %>% filter(hour(date) == i & is.na(influent_mgd_hourly_avg))
value <- final_data %>%
filter(hour(date) == i) %>%
select(influent_mgd_hourly_avg) %>%
summarise(mean(influent_mgd_hourly_avg, na.rm = TRUE))
final_data$influent_mgd_hourly_avg[final_data$date == temp$date] <- as.numeric(value)
temp <- final_data %>% filter(hour(date) == i & is.na(mlws_flow_gpm))
value <- final_data %>%
filter(hour(date) == i) %>%
select(mlws_flow_gpm) %>%
summarise(mean(mlws_flow_gpm, na.rm = TRUE))
final_data$mlws_flow_gpm[final_data$date == temp$date] <- as.numeric(value)
}
for (i in 7:13) {
temp <- final_data %>% filter(hour(date) == i & is.na(abi_mgd))
value <- final_data %>%
filter(hour(date) == i) %>%
select(abi_mgd) %>%
summarise(mean(abi_mgd, na.rm = TRUE))
final_data$abi_mgd[final_data$date == temp$date] <- as.numeric(value)
temp <- final_data %>% filter(hour(date) == i & is.na(ras_gpm))
value <- final_data %>%
filter(hour(date) == i) %>%
select(ras_gpm) %>%
summarise(mean(ras_gpm, na.rm = TRUE))
final_data$ras_gpm[final_data$date == temp$date] <- as.numeric(value)
}
final_data <- final_data %>%
filter(mlws_flow_gpm > 100) # SCADA system down %>%
select(-twas_flow_gal)
ferr_data <- final_data %>% filter(coagulant == "Ferric")
alum_data <- final_data %>% filter(coagulant == "Alum")
save(final_data, ferr_data, alum_data, file = "../data/final-data.rda")
load("../data/final-data.rda")
load("../data/boulderMoWater.rda")
rm( list = ls() )
load("../data/final-data.rda")
load("../data/boulderMoWater.rda")
View(ferr_data)
rm( list = ls() )
library(tidyverse)
library(fields)
library(lubridate)
library(latex2exp)
# make sure src is the current working directory
load("../data/boulderMoWater.rda")
# add the hour for grouping and averaging hourly
phosfax_hourly <- phosfax_10m %>%
mutate(hour = hour(date)) %>%
group_by(date = date(date), hour) %>%
summarise(op_conc_mg_p_l_hourly = mean(op_conc_mg_p_l, na.rm = TRUE)) %>%
ungroup()
# turn the date back into one posixct object and eliminate the hour column
phosfax_hourly$date <- with(phosfax_hourly, ymd_h(paste(date, hour, sep= ' ')))
phosfax_hourly <- phosfax_hourly %>% select(date, op_conc_mg_p_l_hourly)
# similar as above get into the same format. just include the hour of the day
mixed_liqour_hourly <- mixed_liqour_hourly %>%
mutate(hour = hour(date)) %>%
mutate(date = date(date))
mixed_liqour_hourly$date <- with(mixed_liqour_hourly, ymd_h(paste(date, hour, sep= ' ')))
mixed_liqour_hourly <- mixed_liqour_hourly %>% select(1:2)
# only grab the day and coagulant to be merged later
dosing_daily_coag <- dosing_daily[,1:2]
dosing_daily_coag$coagulant <- as.factor(dosing_daily_coag$coagulant)
# flow_hourly already in correct format---start joining data-sets
temp <- inner_join(mixed_liqour_hourly, phosfax_hourly, by = "date")
temp2 <- inner_join(temp, flow_hourly, by = "date")
# add the coagulant so reseparate the hour and date since dosing is only daily and not hourly... will restructure after
temp2 <- temp2 %>%
mutate(hour = hour(date), date = date(date))
final_data <- inner_join(temp2, dosing_daily_coag, by = "date")
# now restructure
final_data$date <- with(final_data, ymd_h(paste(date, hour, sep= ' ')))
# bring the coagulant to the second column
final_data <- final_data %>% select(date, coagulant, everything()) %>% select(-hour)
final_data$centrate_gal[100:101] <- 0
# morning talk thursday
final_data <- final_data %>%
filter(date(date) != ymd("2019-08-30") & date(date) != ymd("2019-09-02"))
final_data <- final_data %>%
filter(date(date) < ymd("2019-11-13") | date(date) > ymd("2019-12-01"))
# variables Kate recommended we can remove
del_vars <- c("influent_mgd_daily_avg", "primary_sludge_gmp_daily_avg", "primary_sludge_gal", "thickened_sludge_gal",
"gvt_o_f_gpm", "daft_sub_gpm", "daft_sub_gal", "twas_flow_gpm_daily_avg")
final_data <- final_data %>%
select(-all_of(del_vars))
# look at NA's
for (i in 8:12) {
temp <- final_data %>% filter(hour(date) == i & is.na(influent_mgd_hourly_avg))
value <- final_data %>%
filter(hour(date) == i) %>%
select(influent_mgd_hourly_avg) %>%
summarise(mean(influent_mgd_hourly_avg, na.rm = TRUE))
final_data$influent_mgd_hourly_avg[final_data$date == temp$date] <- as.numeric(value)
temp <- final_data %>% filter(hour(date) == i & is.na(mlws_flow_gpm))
value <- final_data %>%
filter(hour(date) == i) %>%
select(mlws_flow_gpm) %>%
summarise(mean(mlws_flow_gpm, na.rm = TRUE))
final_data$mlws_flow_gpm[final_data$date == temp$date] <- as.numeric(value)
}
for (i in 7:13) {
temp <- final_data %>% filter(hour(date) == i & is.na(abi_mgd))
value <- final_data %>%
filter(hour(date) == i) %>%
select(abi_mgd) %>%
summarise(mean(abi_mgd, na.rm = TRUE))
final_data$abi_mgd[final_data$date == temp$date] <- as.numeric(value)
temp <- final_data %>% filter(hour(date) == i & is.na(ras_gpm))
value <- final_data %>%
filter(hour(date) == i) %>%
select(ras_gpm) %>%
summarise(mean(ras_gpm, na.rm = TRUE))
final_data$ras_gpm[final_data$date == temp$date] <- as.numeric(value)
}
final_data <- final_data %>%
filter(mlws_flow_gpm > 100) # SCADA system down %>%
select(-twas_flow_gal)
View(final_data)
names(final_data)
rm( list = ls() )
library(tidyverse)
library(fields)
library(lubridate)
library(latex2exp)
# make sure src is the current working directory
load("../data/boulderMoWater.rda")
# add the hour for grouping and averaging hourly
phosfax_hourly <- phosfax_10m %>%
mutate(hour = hour(date)) %>%
group_by(date = date(date), hour) %>%
summarise(op_conc_mg_p_l_hourly = mean(op_conc_mg_p_l, na.rm = TRUE)) %>%
ungroup()
# turn the date back into one posixct object and eliminate the hour column
phosfax_hourly$date <- with(phosfax_hourly, ymd_h(paste(date, hour, sep= ' ')))
phosfax_hourly <- phosfax_hourly %>% select(date, op_conc_mg_p_l_hourly)
# similar as above get into the same format. just include the hour of the day
mixed_liqour_hourly <- mixed_liqour_hourly %>%
mutate(hour = hour(date)) %>%
mutate(date = date(date))
mixed_liqour_hourly$date <- with(mixed_liqour_hourly, ymd_h(paste(date, hour, sep= ' ')))
mixed_liqour_hourly <- mixed_liqour_hourly %>% select(1:2)
# only grab the day and coagulant to be merged later
dosing_daily_coag <- dosing_daily[,1:2]
dosing_daily_coag$coagulant <- as.factor(dosing_daily_coag$coagulant)
# flow_hourly already in correct format---start joining data-sets
temp <- inner_join(mixed_liqour_hourly, phosfax_hourly, by = "date")
temp2 <- inner_join(temp, flow_hourly, by = "date")
# add the coagulant so reseparate the hour and date since dosing is only daily and not hourly... will restructure after
temp2 <- temp2 %>%
mutate(hour = hour(date), date = date(date))
final_data <- inner_join(temp2, dosing_daily_coag, by = "date")
# now restructure
final_data$date <- with(final_data, ymd_h(paste(date, hour, sep= ' ')))
# bring the coagulant to the second column
final_data <- final_data %>% select(date, coagulant, everything()) %>% select(-hour)
final_data$centrate_gal[100:101] <- 0
# morning talk thursday
final_data <- final_data %>%
filter(date(date) != ymd("2019-08-30") & date(date) != ymd("2019-09-02"))
final_data <- final_data %>%
filter(date(date) < ymd("2019-11-13") | date(date) > ymd("2019-12-01"))
# variables Kate recommended we can remove
del_vars <- c("influent_mgd_daily_avg", "primary_sludge_gmp_daily_avg", "primary_sludge_gal", "thickened_sludge_gal",
"gvt_o_f_gpm", "daft_sub_gpm", "daft_sub_gal", "twas_flow_gpm_daily_avg")
final_data <- final_data %>%
select(-all_of(del_vars))
# look at NA's
for (i in 8:12) {
temp <- final_data %>% filter(hour(date) == i & is.na(influent_mgd_hourly_avg))
value <- final_data %>%
filter(hour(date) == i) %>%
select(influent_mgd_hourly_avg) %>%
summarise(mean(influent_mgd_hourly_avg, na.rm = TRUE))
final_data$influent_mgd_hourly_avg[final_data$date == temp$date] <- as.numeric(value)
temp <- final_data %>% filter(hour(date) == i & is.na(mlws_flow_gpm))
value <- final_data %>%
filter(hour(date) == i) %>%
select(mlws_flow_gpm) %>%
summarise(mean(mlws_flow_gpm, na.rm = TRUE))
final_data$mlws_flow_gpm[final_data$date == temp$date] <- as.numeric(value)
}
for (i in 7:13) {
temp <- final_data %>% filter(hour(date) == i & is.na(abi_mgd))
value <- final_data %>%
filter(hour(date) == i) %>%
select(abi_mgd) %>%
summarise(mean(abi_mgd, na.rm = TRUE))
final_data$abi_mgd[final_data$date == temp$date] <- as.numeric(value)
temp <- final_data %>% filter(hour(date) == i & is.na(ras_gpm))
value <- final_data %>%
filter(hour(date) == i) %>%
select(ras_gpm) %>%
summarise(mean(ras_gpm, na.rm = TRUE))
final_data$ras_gpm[final_data$date == temp$date] <- as.numeric(value)
}
final_data <- final_data %>%
filter(mlws_flow_gpm > 100) %>%
select(-twas_flow_gal)
ferr_data <- final_data %>% filter(coagulant == "Ferric")
alum_data <- final_data %>% filter(coagulant == "Alum")
save(final_data, ferr_data, alum_data, file = "../data/final-data.rda")
rm( list = ls() )
load("../data/final-data.rda")
load("../data/boulderMoWater.rda")
View(ferr_data)
fit <- lm(op_mg_p_l ~ ., date = ferr_data[,3:13])
fit <- lm(op_mg_p_l ~ ., data = ferr_data[,3:13])
summary(fit)
plot(fit)
ferr_data[16,]
plot(fit)
#knitr::knit_hooks$set(document = function(x) {sub('\\usepackage[]{color}', '\\usepackage[table,dvipsnames]{xcolor}', x, fixed = TRUE)})
knitr::opts_chunk$set(echo = FALSE,comment = NA, warning = FALSE, message = FALSE, cache = FALSE, fig.height = 3)
setwd("~/Desktop/MoWater/boulder/src")
rm( list = ls() )
library(tidyverse)
library(fields)
library(lubridate)
library(latex2exp)
library(reshape2)
library(gridExtra)
library(viridis)
library(RColorBrewer)
# make sure src is the current working directory
load("../data/final-data.rda")
load("../data/boulderMoWater.rda")
theme_set(theme_bw())
theme_update(panel.background = element_blank(), axis.line = element_line(colour = "black"))
table(final_data$coagulant)
p1 <- alum_data %>% ggplot() +
geom_point(aes(date, op_conc_mg_p_l_hourly)) +
labs(title = "Alum OP Hourly",
x = "Date",
y = "Hourly Ortho-phosphate (mg/L)") +
theme(plot.title = element_text(face="bold", size = 9, hjust = 0.5),
axis.text = element_text(size = 6),
axis.title = element_text(size = 8))
alumphos <- phosfax_10m %>% # phosfax only alum coagulant every 10 minutes
filter(date >= ymd("2019-10-22")) %>%
filter(date <= ymd("2019-12-15"))
rects1 <- data.frame(xstart = as.POSIXct('2019-11-06 15:00:00'),
xend = as.POSIXct('2019-12-01 00:00:00'))
####### thursday plot 1
p2 <- alumphos %>% ggplot() +
geom_point(aes(date, op_conc_mg_p_l), size=1.25) +
labs(title = "Alum Effluent OP 10-minute Intervals",
x = "Date",
y = "Ortho-phosphate (mg/L)") +
geom_rect(data = rects1, aes(xmin = xstart, xmax = xend,
ymin = -Inf, ymax = Inf),fill = "red",col = "red", alpha = 0.1) +
theme(plot.title = element_text(face="bold", size = 9, hjust = 0.5),
axis.text = element_text(size = 6),
axis.title = element_text(size = 8))
grid.arrange(p1, p2, ncol = 2)
p1 <- ferr_data %>% ggplot() +
geom_point(aes(date, op_conc_mg_p_l_hourly)) +
labs(title = "Ferric OP Hourly",
x = "Date",
y = "Hourly Ortho-phosphate (mg/L)") +
theme(plot.title = element_text(face="bold", size = 9, hjust = 0.5),
axis.text = element_text(size = 6),
axis.title = element_text(size = 8))
ferrphos <- phosfax_10m %>%
filter(date >= ymd("2019-08-15")) %>%
filter(date <= ymd("2019-09-07"))
rects2 <- data.frame(xstart = as.POSIXct('2019-08-30 15:00:00'),
xend = as.POSIXct('2019-09-02 10:00:00'))
#### thursday plot 2
p2 <- ferrphos %>% ggplot() +
geom_point(aes(date, op_conc_mg_p_l), size=1.25) +
labs(title = "Ferric Effluent OP 10-minute Intervals",
x = "Date",
y = "Ortho-phosphate (mg/L)") +
geom_rect(data = rects2, aes(xmin = xstart, xmax = xend,
ymin = -Inf, ymax = Inf),fill = "red",col = "red", alpha = 0.1) +
theme(plot.title = element_text(face="bold", size = 9, hjust = 0.5),
axis.text = element_text(size = 6),
axis.title = element_text(size = 8))
grid.arrange(p1, p2, ncol = 2)
ferr_op_melt <- melt(ferr_data[,c(1,3:4)], id = "date")
p1 <- ferr_op_melt %>% ggplot() +
geom_point(aes(date, value, col = variable)) +
labs(title = "Ferric OP Concentration at Dosing",
x = "Date",
y = "Hourly OP (mg/L)") +
scale_color_brewer(palette = "Dark2", name = "Location", labels = c("Dosing Station", "Effluent")) +
theme(legend.title = element_text(size = 8),
legend.text = element_text(size = 7),
plot.title = element_text(face="bold", size = 9, hjust = 0.5),
axis.text = element_text(size = 6),
axis.title = element_text(size = 9),
strip.text.x = element_text(size = 8),
legend.position = c(0.7,0.89),
legend.background = element_blank(),
legend.key = element_blank())
alum_op_melt <- melt(alum_data[,c(1,3:4)], id = "date")
p2 <- alum_op_melt %>% ggplot() +
geom_point(aes(date, value, col = variable)) +
labs(title = "Alum OP Concentration at Dosing",
x = "Date",
y = "Hourly OP (mg/L)") +
scale_color_brewer(palette = "Dark2", name = "Location", labels = c("Dosing Station", "Effluent")) +
theme(legend.title = element_text(size = 8),
legend.text = element_text(size = 7),
plot.title = element_text(face="bold", size = 9, hjust = 0.5),
axis.text = element_text(size = 6),
axis.title = element_text(size = 9),
strip.text.x = element_text(size = 8),
legend.position = c(0.7,0.89),
legend.background = element_blank(),
legend.key = element_blank())
grid.arrange(p1, p2, ncol = 2)
ferr_data <- ferr_data %>% mutate(hour = hour(date))
alum_data <- alum_data %>% mutate(hour = hour(date))
alum_melt1 <- melt(alum_data[,c(8,15)], id.vars = "hour")
View(ferr_data)
fit <- lm(op_mg_p_l ~ ., date = ferr_data[,3:13])
fit <- lm(op_mg_p_l ~ ., data = ferr_data[,3:13])
View(ferr_data)
summary(fit)
plot(fit)
plot(ferr_data$date, ferr_data$op_mg_p_l)
